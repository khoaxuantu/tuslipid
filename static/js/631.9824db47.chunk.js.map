{"version":3,"file":"static/js/631.9824db47.chunk.js","mappings":"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","sources":["components/blogs/blogs.tsx","components/blogs/contents.tsx","components/blogs/header.tsx","components/blogs/listpage.tsx","markdown|lazy|/^/.//.*$/|groupOptions: {}|namespace object"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Card from \"../../lib/factory/cardBase\";\nimport { blogInfoDict } from \"../../lib/general_info\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport rehypeHighlight from \"rehype-highlight/lib\";\nimport rehypeRaw from \"rehype-raw\";\nimport rehypeSlug from \"rehype-slug\";\nimport remarkMath from \"remark-math\";\nimport rehypeKatex from \"rehype-katex\";\nimport \"../../css/markdown.css\";\n\nexport function BlogsList(props: {blogInfoList: { dictKey: string; date: string; }[]}) {\n    /**\n     * Implement infinite scrolling for blogs\n     * - blogsNum: The number of blogs for each fetching\n     */\n    const blogsNum: number = 4;\n    const [startId, setStartId] = useState(0);\n    const [hasMore, setHasMore] = useState(true);\n    const [blogs, setBlogs] : [{ dictKey: string; date: string; }[], any] = useState([]);\n    // console.log(\"ðŸš€ ~ file: blogs.tsx:21 ~ BlogsList ~ blogs:\", blogs)\n\n    useEffect(() => {\n        let canFetch = true;\n        function fetchBlogs(startId: number) {\n            const newBlogs = [];\n            const nextStartId = startId + blogsNum;\n            if (nextStartId >= props.blogInfoList.length) setHasMore(!hasMore);\n\n            for (let i = startId; i < nextStartId && i < props.blogInfoList.length; i++) {\n                newBlogs.push(props.blogInfoList[i]);\n            }\n            setBlogs([...blogs, ...newBlogs]);\n        }\n\n        if (canFetch) fetchBlogs(startId);\n\n        return () => {\n            canFetch = !canFetch;\n            // console.log(\"ðŸš€ ~ file: blogs.tsx:41 ~ return ~ canFetch:\", canFetch)\n        }\n    }, [startId]);\n\n    useEffect(() => {\n        function onScroll() {\n            const scrollTop = document.documentElement.scrollTop;\n            const scrollHeight = document.documentElement.scrollHeight;\n            const clientHeight = document.documentElement.clientHeight;\n\n            if (scrollTop + clientHeight >= scrollHeight - 100 && hasMore) {\n                setStartId(startId => startId + blogsNum);\n            }\n        }\n\n        window.addEventListener('scroll', onScroll)\n        return () => window.removeEventListener('scroll', onScroll)\n    }, [blogs]);\n\n    return (\n        <>\n            {blogs.map((blog, index) => {\n                return <Card key={index} {...blogInfoDict[blog.dictKey]} />;\n            })}\n        </>\n    );\n}\n\nexport function SingleBlog(props: {id: string}) {\n    const blogInfo = blogInfoDict[props.id];\n    const [text, setText] = useState('');\n    const [mdLoaded, setMdLoaded] = useState(false);\n\n    useEffect(() => {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        import(`../../markdown/${blogInfo.file}`)\n            .then(res => {\n                fetch(res.default, {signal})\n                .then(res => res.text())\n                .then(txt => {\n                    setText(txt);\n                    setMdLoaded(true);\n                })\n                .catch(err => console.log(err));\n            })\n            .catch(err => console.log(err));\n\n        return () => {\n            controller.abort();\n        }\n    }, [])\n\n    /**\n     * Due to the delay of ReactMarkdown's render, an useEffect is needed\n     * to detect the change of the blogWrapper\n     *\n     * If the blogWrapper's childNodes is not empty, set its height back to auto\n     * (initially the height is constant pixels)\n     */\n    useEffect(() => {\n        const blogWrapper = document.getElementsByClassName(\"single-blog-wrapper\")[0] as HTMLElement;\n        if (blogWrapper.childNodes.length !== 0) {\n            blogWrapper.style.height = \"auto\";\n            scrollToAnchor();\n        }\n    }, [mdLoaded]);\n\n    return (\n        <>\n            <ReactMarkdown\n                children={text}\n                remarkPlugins={[\n                  remarkGfm, remarkMath,\n                ]}\n                rehypePlugins={[\n                  rehypeHighlight, rehypeRaw, rehypeKatex, rehypeSlug,\n                ]}\n            />\n        </>\n    );\n}\n\nfunction scrollToAnchor() {\n    const target = window.location.hash;\n    if (!target) return;\n    const anchor = document.querySelector(target) as HTMLElement;\n    if (anchor) {\n      setTimeout(() => {\n        window.scrollTo({\n          top: anchor.offsetTop,\n          behavior: \"smooth\",\n        })\n      }, 200);\n    }\n}\n\n","import { blogInfoList } from \"../../lib/general_info\";\nimport { BlogsList, SingleBlog } from \"./blogs\";\n\nexport function BlogsContent() {\n    /* blogInfoList needs sorting first */\n    blogInfoList.sort((a, b) => {\n        const dateA = new Date(a.date);\n        const dateB = new Date(b.date);\n        if (dateA < dateB) return 1;\n        else if (dateA > dateB) return -1;\n        else return 0;\n    });\n\n    return (\n        <div className=\"blog-wrapper\">\n            <BlogsList blogInfoList={blogInfoList} />\n        </div>\n    );\n}\n\nexport function SingleBlogContent(props: {id: string}) {\n    return (\n        <article className=\"single-blog-wrapper transition-blog\">\n            <SingleBlog id={props.id} />\n        </article>\n    );\n}","import { blogInfoDict } from \"../../lib/general_info\";\n\nexport function BlogsPageHeaderGrp() {\n    return (\n      <div className='header-grp'>\n        <div className='header-txt-blog'>\n          <b>Tus's Blogs</b>\n        </div>\n        <div className='body-txt-blog mt-2'>\n          Some notes, some ideas, some opinions\n        </div>\n        <hr />\n      </div>\n    );\n}\n\nexport function SingleBlogPageHeaderGrp(props: {id: string}) {\n    return (\n      <div className='header-grp'>\n        <div className='header-txt-blog'>\n          <b>{blogInfoDict[props.id].title}</b>\n        </div>\n        <div className='body-txt-blog mt-2'>\n          {formatDate(blogInfoDict[props.id].date)}\n        </div>\n      </div>\n    );\n}\n\nfunction formatDate(date: Date) {\n  const options: Intl.DateTimeFormatOptions = {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n    weekday: \"long\",\n  }\n\n  return date.toLocaleDateString(\"en-UK\", options);\n}\n","import { BlogsPageHeaderGrp } from \"./header\";\nimport { BlogsContent } from \"./contents\";\nimport { useEffect } from \"react\";\nimport { getMetadataURL } from \"../../lib/utils/Location\";\nimport { useLocation } from \"react-router-dom\";\nimport { Metadata } from \"../seo/Metadata\";\nimport CustomHead from \"../seo\";\n\nconst blogsDescription = \"Some notes, some ideas, some opinions\";\n\nexport default function BlogsPage() {\n  const url = getMetadataURL(useLocation());\n  const metadata: Metadata = {\n    description: blogsDescription,\n    title: \"Blogs\",\n    canonicalURL: url,\n    og: {\n      description: blogsDescription,\n      title: \"Tusss Blogs\",\n      url: url,\n    },\n    twitter: {\n      description: blogsDescription,\n      title: \"Tusss Blogs\",\n      url: url,\n    },\n  };\n\n  useEffect(() => {\n    const container = document.getElementsByClassName(\n      \"container\"\n    )[0] as HTMLElement;\n    container.classList.add(\"transition-page\");\n  }, []);\n\n  return (\n    <>\n      <CustomHead metadata={metadata} />\n      <BlogsPageHeaderGrp />\n      <BlogsContent />\n    </>\n  );\n}\n","var map = {\n\t\"./great_ytb_channels_1.md\": [\n\t\t3258,\n\t\t258\n\t],\n\t\"./great_ytb_channels_2.md\": [\n\t\t7699,\n\t\t699\n\t],\n\t\"./markdown_starter.md\": [\n\t\t2771,\n\t\t771\n\t],\n\t\"./react_bun_boilerplate.md\": [\n\t\t3659,\n\t\t659\n\t],\n\t\"./uncommon_javascript_notes.md\": [\n\t\t9769,\n\t\t769\n\t],\n\t\"./uncommon_javascript_notes_1.md\": [\n\t\t7951,\n\t\t951\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 1273;\nmodule.exports = webpackAsyncContext;"],"names":["BlogsList","props","startId","setStartId","useState","hasMore","setHasMore","blogs","setBlogs","useEffect","canFetch","newBlogs","nextStartId","blogInfoList","length","i","push","fetchBlogs","onScroll","scrollTop","document","documentElement","scrollHeight","clientHeight","window","addEventListener","removeEventListener","_jsx","_Fragment","children","map","blog","index","Card","blogInfoDict","dictKey","SingleBlog","blogInfo","id","text","setText","mdLoaded","setMdLoaded","controller","AbortController","signal","concat","file","then","res","fetch","default","txt","catch","err","console","log","abort","blogWrapper","getElementsByClassName","childNodes","style","height","target","location","hash","anchor","querySelector","setTimeout","scrollTo","top","offsetTop","behavior","scrollToAnchor","ReactMarkdown","remarkPlugins","remarkGfm","remarkMath","rehypePlugins","rehypeHighlight","rehypeRaw","rehypeKatex","rehypeSlug","BlogsContent","sort","a","b","dateA","Date","date","dateB","className","SingleBlogContent","BlogsPageHeaderGrp","_jsxs","SingleBlogPageHeaderGrp","title","formatDate","toLocaleDateString","day","month","year","weekday","blogsDescription","BlogsPage","url","getMetadataURL","useLocation","metadata","description","canonicalURL","og","twitter","classList","add","CustomHead","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","e","Error","code","ids","t","keys","Object","module","exports"],"sourceRoot":""}